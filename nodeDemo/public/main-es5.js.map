{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/apicall.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/appointments/appointments.component.ts","webpack:///src/app/appointments/appointments.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/material.module.ts","webpack:///src/app/models/appointment.model.ts","webpack:///src/app/models/login.model.ts","webpack:///src/app/models/register.model.ts","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/nav-bar/nav-bar.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/services/app-http.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/globals.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApicallService","httpClient","appo","post","pipe","data","error","providedIn","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AppointmentsComponent","formBuilder","http","apiService","inputAppo","minDate","Date","maxDate","AppoForm","group","date","setHours","name","email","phoneNumber","hour","addAppo","subscribe","res","onAppoFormSubmit","HomeComponent","LoginComponent","authService","router","globals","user","hide","loginstate","loginForm","required","password","minLength","maxLength","authenticateUser","success","navigate","alert","console","log","onLoginSubmit","MaterialModule","AppoModel","LoginModel","RegisterModel","NavBarComponent","RegisterComponent","registerForm","registerUser","onRegisterSubmit","AppHttpService","headers","append","options","getHeaders","url","get","getRequestOptions","AuthService","appHttp","map","json","Globals","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppoModel } from './models/appointment.model';\nimport * as Rx from \"rxjs/Rx\";\nimport { from, Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApicallService {\n\n  constructor(private httpClient: HttpClient) {}\n\n  addAppo(appo: AppoModel) {\n    return this.httpClient.post(`/appointments/addappointment`,appo).\n        pipe(\n           map((data: any) => {\n             return data;\n           }), catchError( error => {\n             return throwError( 'Something went wrong!' );\n           })\n        )\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport {AppointmentsComponent} from './appointments/appointments.component';\nconst routes: Routes = [{\n  path: '',\n  component: HomeComponent\n}, {\n  path: 'register',\n  component: RegisterComponent\n}, {\n  path: 'login',\n  component: LoginComponent\n},\n{\n path:'appointments',\n component:AppointmentsComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n\n<app-nav-bar></app-nav-bar>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { MaterialModule } from './material.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { AppHttpService } from './services/app-http.service';\r\nimport { AuthService } from './services/auth.service';\r\n\r\nimport { Globals } from './services/globals';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { AppointmentsComponent } from './appointments/appointments.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    NavBarComponent,\r\n    AppointmentsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    HttpModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    NgxMaterialTimepickerModule\r\n  ],\r\n  providers: [AppHttpService, AuthService, Globals, MatDatepickerModule],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport{ Input } from '@angular/core'\r\nimport { AppoModel } from '../models/appointment.model';\r\nimport {Globals} from '../services/globals';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport {ApicallService} from '../apicall.service'\r\n@Component({\r\n  selector: 'app-appointments',\r\n  templateUrl: './appointments.component.html',\r\n  styleUrls: ['./appointments.component.scss']\r\n})\r\nexport class AppointmentsComponent implements OnInit {\r\n     inputAppo:AppoModel=new AppoModel();\r\n   //date=new Date;\r\n   minDate = new Date();\r\n   maxDate = new Date(2021, 0, 1);\r\n   AppoForm: FormGroup;\r\n   hourFrom:any;\r\n   hour:any;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    public http: HttpClient, private apiService: ApicallService\r\n  ) \r\n  { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //workingGood:\r\n     this.AppoForm = this.formBuilder.group({\r\n    //   'date': [this.inputAppo.date, [\r\n    //   ]],\r\n    //   // 'hour': [this.inputAppo.hour, [\r\n\r\n    //   // ]]\r\n     });\r\n  }\r\n  onAppoFormSubmit() {\r\n\r\n    \r\n    //alert(\"day: \"+this.inputAppo.date.getDate()+\"month: \"+this.inputAppo.date.getMonth()+\"year: \"+this.inputAppo.date.getFullYear());\r\n    // alert(\"date: \"+this.inputAppo.date+\"H :  \"+this.inputAppo.date+\"TT : \"+(this.inputAppo.date));\r\n   // alert(\"out:\"+typeof(this.hour)); out:String\r\n    //this.inputAppo.date=this.date;\r\n    (this.inputAppo.date).setHours(12,0,0);\r\n    this.inputAppo.name=\"testName\";\r\n    this.inputAppo.email=\"m@g.com\";\r\n    this.inputAppo.phoneNumber=\"01220490123\"\r\n    this.inputAppo.hour=this.hour;\r\n    //this.inputAppo.hour=\"4:19PM\";\r\n    this.apiService.addAppo(this.inputAppo).subscribe((res)=>{\r\n    });\r\n  }\r\n  // inputAppo.Inpdate=this.date;\r\n}\r\n","<p>Hello, please Book an appointment !!</p>\r\n<!-- <mat-form-field class=\"example-full-width\">\r\n  <input matInput #input=\"ngModel\" [(ngModel)]=\"date\" [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker></mat-datepicker>\r\n\r\n  <mat-error *ngIf=\"input.hasError('matDatepickerMax')\">Date should be valid</mat-error>\r\n  \r\n</mat-form-field>\r\n\r\n<br><br><br> -->\r\n \r\n\r\n\r\n<div class=\"medium-list\">\r\n  <div class=\"list-viewer-wrapper\">\r\n    <div class=\"list-header-title\">apointment reservation</div>\r\n\r\n    <form [formGroup]=\"AppoForm\" (ngSubmit)=\"AppoForm.valid && onAppoFormSubmit()\" novalidate>\r\n      <div class=\"form-container\">  \r\n\r\n        <mat-form-field>\r\n            <!-- <input id=\"password\"\r\n                   matInput\r\n                   formControlName=\"password\"\r\n                   [(ngModel)]=\"user.password\"\r\n                   placeholder=\"Enter your password\"\r\n                   [type]=\"hide ? 'password':'text'\" />\r\n              <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                {{hide ? 'visibility' : 'visibility_off'}}\r\n              </mat-icon> -->\r\n              <input id=\"appointmentID\" matInput #input=\"ngModel\" [(ngModel)]=\"this.inputAppo.date\" [ngModelOptions]=\"{standalone: true}\" [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n              <mat-datepicker #picker></mat-datepicker>\r\n            \r\n              <mat-error *ngIf=\"input.hasError('matDatepickerMax')\">Date should be valid</mat-error>\r\n              <br><br>\r\n          </mat-form-field>\r\n          <br><br><br><br>\r\n          <label for=\"exampleInput\">Pick a time </label>\r\n          <!-- <input type=\"time\" id=\"exampleInput\" name=\"input\" ng-model=\"this.inputAppo.hour\" -->\r\n        <input placeholder=\"insert hour\" aria-label=\"Editable dial\"\r\n                [ngxTimepicker]=\"editableDial\" [(ngModel)]=\"this.hour\" [ngModelOptions]=\"{standalone: true}\" readonly>\r\n            <ngx-material-timepicker #editableDial [enableKeyboardInput]=\"true\" ></ngx-material-timepicker>\r\n          <button mat-button type=\"submit\" \r\n          class=\"mat-raised-button mat-primary\">reserve new appointment</button>\r\n          <!-- <button mat-button routerLink=\"/register\" class=\"divider\">Register</button> -->\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\r\n<h1>Nosaaa websiteee </h1>","import { Component, OnInit } from '@angular/core';\r\nimport { LoginModel } from '../models/login.model';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport {Globals} from '../services/globals';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  user: LoginModel = new LoginModel();\r\n  loginForm: FormGroup;\r\n  hide = true;\r\nprivate loginstate:boolean;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private globals: Globals) { \r\n      this.loginstate = globals.loginstate;\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      'email': [this.user.email, [\r\n        Validators.required,\r\n        Validators.email\r\n      ]],\r\n      'password': [this.user.password, [\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(30)\r\n      ]]\r\n    });\r\n  }\r\n  onLoginSubmit() {\r\n    // alert(this.user.email + ' ' + this.user.password);\r\n    this.authService.authenticateUser(this.user)\r\n    .subscribe(data => {\r\n      if (data.success) { \r\n        this.globals.loginstate=true;\r\n        this.loginstate=true;\r\n        this.router.navigate(['/register']);\r\n      } else {\r\n        alert(\"login failed !\");\r\n        console.log('Failed');\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"medium-list\">\r\n    <div class=\"list-viewer-wrapper\">\r\n      <div class=\"list-header-title\">login</div>\r\n  \r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginForm.valid && onLoginSubmit()\" novalidate>\r\n        <div class=\"form-container\">  \r\n          <mat-form-field>\r\n              <input id=\"email\"\r\n                     matInput\r\n                     formControlName=\"email\"\r\n                     [(ngModel)]=\"user.email\"\r\n                     placeholder=\"Enter your email\" />\r\n            </mat-form-field>\r\n  \r\n          <mat-form-field>\r\n              <input id=\"password\"\r\n                     matInput\r\n                     formControlName=\"password\"\r\n                     [(ngModel)]=\"user.password\"\r\n                     placeholder=\"Enter your password\"\r\n                     [type]=\"hide ? 'password':'text'\" />\r\n                <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                  {{hide ? 'visibility' : 'visibility_off'}}\r\n                </mat-icon>\r\n            </mat-form-field>\r\n  \r\n            <button mat-button type=\"submit\" \r\n                    class=\"mat-raised-button mat-primary\" \r\n                    [disabled]=\"!loginForm.valid\">Login</button>\r\n            <!-- <button mat-button routerLink=\"/register\" class=\"divider\">Register</button> -->\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  ","\r\nimport { NgModule } from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport {\r\n    MatToolbarModule,\r\n} from '@angular/material/toolbar';\r\n\r\nimport {\r\n    MatButtonModule,\r\n} from '@angular/material/button';\r\n\r\nimport {\r\n    MatInputModule,\r\n} from '@angular/material/input';\r\nimport {\r\n    MatIconModule,\r\n} from '@angular/material/icon';\r\n@NgModule({\r\n    imports: [\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FormsModule\r\n    ],\r\n    exports: [\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FormsModule\r\n    ]\r\n})\r\nexport class MaterialModule { }\r\n","export class AppoModel {\r\n    date:Date;\r\n    name: String;\r\n    email:String;\r\n    hour:String;\r\n    phoneNumber:String\r\n}\r\n","export class LoginModel {\n    email: String;\n    password: String;\n}\n","export class RegisterModel {\n    name: String;\n    email: String;\n    password: String;\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Globals} from '../services/globals'\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.scss']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n  globals: Globals;\r\n  constructor(globals: Globals) { \r\n    this.globals = globals;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  onLogout(){\r\n  this.globals.loginstate=false;\r\n}\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <button mat-button routerLink=\"/\">Home </button>\r\n    \r\n    <span class=\"spacer\"></span>\r\n    <button *ngIf=\"globals.loginstate\" mat-button routerLink=\"/register\">Register</button> \r\n    <!-- <button mat-button routerLink=\"/register\">Register</button> -->\r\n    <button *ngIf=\"!globals.loginstate\" mat-button routerLink=\"/login\">Login</button>\r\n    <button *ngIf=\"globals.loginstate\" mat-button routerLink=\"\" (click)=\"onLogout()\">logout</button>\r\n    <button mat-button routerLink=\"/appointments\">make appointmnent</button>\r\n  </mat-toolbar-row>\r\n</mat-toolbar> \r\n <!-- <P>var value : {{globals.loginstate}}</P>  -->","import { Component, OnInit } from '@angular/core';\nimport { RegisterModel } from '../models/register.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  user: RegisterModel = new RegisterModel();\n  registerForm: FormGroup;\n  hide = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      'name': [this.user.name, [\n        Validators.required\n      ]],\n      'email': [this.user.email, [\n        Validators.required,\n        Validators.email\n      ]],\n      'password': [this.user.password, [\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(30)\n      ]]\n    });\n  }\n\n  onRegisterSubmit() {\n    // alert(this.user.name + ' ' + this.user.email + ' ' + this.user.password);\n    this.authService.registerUser(this.user)\n    .subscribe(data => {\n      if (data.success) {\n        this.router.navigate(['/login']);\n      } else {\n        console.log('Failed');\n      }\n    });\n  }\n\n}\n","<div class=\"medium-list\">\n  <div class=\"list-viewer-wrapper\">\n    <div class=\"list-header-title\">Register</div>\n\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"registerForm.valid && onRegisterSubmit()\" novalidate>\n      <div class=\"form-container\">\n        <mat-form-field>\n          <input id=\"name\"\n                 matInput\n                 formControlName=\"name\"\n                 [(ngModel)]=\"user.name\"\n                 placeholder=\"Enter your name\" />\n        </mat-form-field>\n\n        <mat-form-field>\n            <input id=\"email\"\n                   matInput\n                   formControlName=\"email\"\n                   [(ngModel)]=\"user.email\"\n                   placeholder=\"Enter your email\" />\n          </mat-form-field>\n\n        <mat-form-field>\n            <input id=\"password\"\n                   matInput\n                   formControlName=\"password\"\n                   [(ngModel)]=\"user.password\"\n                   placeholder=\"Enter your password\"\n                   [type]=\"hide ? 'password':'text'\" />\n              <mat-icon matSuffix (click)=\"hide = !hide\">\n                {{hide ? 'visibility' : 'visibility_off'}}\n              </mat-icon>\n          </mat-form-field>\n\n          <button mat-button type=\"submit\" \n                  class=\"mat-raised-button mat-primary\" \n                  [disabled]=\"!registerForm.valid\">Register</button>\n          <!-- <button mat-button routerLink=\"/login\" class=\"divider\">Login</button> -->\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\n\n@Injectable()\nexport class AppHttpService {\n\n  constructor(private http: Http) { }\n\n  getHeaders() {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    // TODO: add token\n\n    return headers;\n  }\n\n  getRequestOptions(): RequestOptions {\n    const options = new RequestOptions();\n    options.headers = this.getHeaders();\n\n    return options;\n  }\n\n  get(url: string) {\n    return this.http.get(url, this.getRequestOptions());\n  }\n\n  post(url: string, data: any) {\n    return this.http.post(url, data, this.getRequestOptions());\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppHttpService } from './app-http.service';\r\nimport { RegisterModel } from '../models/register.model';\r\nimport { LoginModel } from '../models/login.model';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  constructor(private appHttp: AppHttpService) { }\r\n\r\n  registerUser(user: RegisterModel) {\r\n    return this.appHttp.post('users/register', user)\r\n    .map(res => res.json());\r\n  }\r\n\r\n  authenticateUser(user: LoginModel) {\r\n    return this.appHttp.post('users/login', user)\r\n    .map(res => res.json());\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class Globals {\r\n  loginstate: boolean = false;\r\n  \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}