{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/material.module.ts","webpack:///src/app/models/login.model.ts","webpack:///src/app/models/register.model.ts","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/nav-bar/nav-bar.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/services/app-http.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HomeComponent","LoginComponent","formBuilder","authService","router","user","hide","loginForm","group","email","required","password","minLength","maxLength","authenticateUser","subscribe","data","success","navigate","console","log","onLoginSubmit","MaterialModule","LoginModel","RegisterModel","NavBarComponent","RegisterComponent","registerForm","name","registerUser","onRegisterSubmit","AppHttpService","http","headers","append","options","getHeaders","url","get","getRequestOptions","post","AuthService","appHttp","map","res","json","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: HomeComponent\n}, {\n  path: 'register',\n  component: RegisterComponent\n}, {\n  path: 'login',\n  component: LoginComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n\n<app-nav-bar></app-nav-bar>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { MaterialModule } from './material.module';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { AppHttpService } from './services/app-http.service';\nimport { AuthService } from './services/auth.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    NavBarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    HttpModule\n  ],\n  providers: [AppHttpService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginModel } from '../models/login.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  user: LoginModel = new LoginModel();\n  loginForm: FormGroup;\n  hide = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      'email': [this.user.email, [\n        Validators.required,\n        Validators.email\n      ]],\n      'password': [this.user.password, [\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(30)\n      ]]\n    });\n  }\n\n  onLoginSubmit() {\n    // alert(this.user.email + ' ' + this.user.password);\n    this.authService.authenticateUser(this.user)\n    .subscribe(data => {\n      if (data.success) {\n        this.router.navigate(['/register']);\n      } else {\n        console.log('Failed');\n      }\n    });\n  }\n\n}\n","<div class=\"medium-list\">\n    <div class=\"list-viewer-wrapper\">\n      <div class=\"list-header-title\">Register</div>\n  \n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginForm.valid && onLoginSubmit()\" novalidate>\n        <div class=\"form-container\">  \n          <mat-form-field>\n              <input id=\"email\"\n                     matInput\n                     formControlName=\"email\"\n                     [(ngModel)]=\"user.email\"\n                     placeholder=\"Enter your email\" />\n            </mat-form-field>\n  \n          <mat-form-field>\n              <input id=\"password\"\n                     matInput\n                     formControlName=\"password\"\n                     [(ngModel)]=\"user.password\"\n                     placeholder=\"Enter your password\"\n                     [type]=\"hide ? 'password':'text'\" />\n                <mat-icon matSuffix (click)=\"hide = !hide\">\n                  {{hide ? 'visibility' : 'visibility_off'}}\n                </mat-icon>\n            </mat-form-field>\n  \n            <button mat-button type=\"submit\" \n                    class=\"mat-raised-button mat-primary\" \n                    [disabled]=\"!loginForm.valid\">Login</button>\n            <button mat-button routerLink=\"/register\" class=\"divider\">Register</button>\n        </div>\n      </form>\n    </div>\n  </div>\n  ","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n    MatToolbarModule,\r\n} from '@angular/material/toolbar';\r\n\r\nimport {\r\n    MatButtonModule,\r\n} from '@angular/material/button';\r\n\r\nimport {\r\n    MatInputModule,\r\n} from '@angular/material/input';\r\nimport {\r\n    MatIconModule,\r\n} from '@angular/material/icon';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatInputModule,\r\n        MatIconModule\r\n    ],\r\n    exports: [\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatInputModule,\r\n        MatIconModule\r\n    ]\r\n})\r\nexport class MaterialModule { }\r\n","export class LoginModel {\n    email: String;\n    password: String;\n}\n","export class RegisterModel {\n    name: String;\n    email: String;\n    password: String;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <button mat-button routerLink=\"/\">Home </button>\n    \n    <span class=\"spacer\"></span>\n    <button mat-button routerLink=\"/register\">Register</button>\n    <button mat-button routerLink=\"/login\">Login</button>\n  </mat-toolbar-row>\n</mat-toolbar> ","import { Component, OnInit } from '@angular/core';\nimport { RegisterModel } from '../models/register.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  user: RegisterModel = new RegisterModel();\n  registerForm: FormGroup;\n  hide = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      'name': [this.user.name, [\n        Validators.required\n      ]],\n      'email': [this.user.email, [\n        Validators.required,\n        Validators.email\n      ]],\n      'password': [this.user.password, [\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(30)\n      ]]\n    });\n  }\n\n  onRegisterSubmit() {\n    // alert(this.user.name + ' ' + this.user.email + ' ' + this.user.password);\n    this.authService.registerUser(this.user)\n    .subscribe(data => {\n      if (data.success) {\n        this.router.navigate(['/login']);\n      } else {\n        console.log('Failed');\n      }\n    });\n  }\n\n}\n","<div class=\"medium-list\">\n  <div class=\"list-viewer-wrapper\">\n    <div class=\"list-header-title\">Register</div>\n\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"registerForm.valid && onRegisterSubmit()\" novalidate>\n      <div class=\"form-container\">\n        <mat-form-field>\n          <input id=\"name\"\n                 matInput\n                 formControlName=\"name\"\n                 [(ngModel)]=\"user.name\"\n                 placeholder=\"Enter your name\" />\n        </mat-form-field>\n\n        <mat-form-field>\n            <input id=\"email\"\n                   matInput\n                   formControlName=\"email\"\n                   [(ngModel)]=\"user.email\"\n                   placeholder=\"Enter your email\" />\n          </mat-form-field>\n\n        <mat-form-field>\n            <input id=\"password\"\n                   matInput\n                   formControlName=\"password\"\n                   [(ngModel)]=\"user.password\"\n                   placeholder=\"Enter your password\"\n                   [type]=\"hide ? 'password':'text'\" />\n              <mat-icon matSuffix (click)=\"hide = !hide\">\n                {{hide ? 'visibility' : 'visibility_off'}}\n              </mat-icon>\n          </mat-form-field>\n\n          <button mat-button type=\"submit\" \n                  class=\"mat-raised-button mat-primary\" \n                  [disabled]=\"!registerForm.valid\">Register</button>\n          <button mat-button routerLink=\"/login\" class=\"divider\">Login</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\n\n@Injectable()\nexport class AppHttpService {\n\n  constructor(private http: Http) { }\n\n  getHeaders() {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    // TODO: add token\n\n    return headers;\n  }\n\n  getRequestOptions(): RequestOptions {\n    const options = new RequestOptions();\n    options.headers = this.getHeaders();\n\n    return options;\n  }\n\n  get(url: string) {\n    return this.http.get(url, this.getRequestOptions());\n  }\n\n  post(url: string, data: any) {\n    return this.http.post(url, data, this.getRequestOptions());\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { HttpClient } from '@angular/common/http';\nimport { AppHttpService } from './app-http.service';\nimport { RegisterModel } from '../models/register.model';\nimport { LoginModel } from '../models/login.model';\n\n\n\n@Injectable()\nexport class AuthService {\n\n  constructor(private appHttp: AppHttpService) { }\n\n  registerUser(user: RegisterModel) {\n    return this.appHttp.post('users/register', user)\n    .map(res => res.json());\n  }\n\n  authenticateUser(user: LoginModel) {\n    return this.appHttp.post('users/login', user)\n    .map(res => res.json());\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}