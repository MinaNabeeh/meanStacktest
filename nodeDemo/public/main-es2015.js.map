{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/material.module.ts","./src/app/models/login.model.ts","./src/app/models/register.model.ts","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/app-http.service.ts","./src/app/services/auth.service.ts","./src/app/services/globals.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACD;AACY;AACT;;;AAEzD,MAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAa;KACzB,EAAE;QACD,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,8EAAiB;KAC7B,EAAE;QACD,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,qEAAc;KAC1B,CAAC,CAAC;AAMI,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,QAAQ,CAAC;KAClB;;wEAFY,YAAY;4FAAZ,YAAY;QCLzB,yEAA2B;QAC3B,2EAA+B;;6FDIlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACsC;AAC1B;AACV;AAEa;AACL;AAEJ;AACU;AACS;AACZ;AACQ;AACD;AACP;AAET;;AAqBtC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,0EAAc,EAAE,mEAAW,EAAC,0DAAO,CAAC,YARvC;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,+DAAc;YACd,kEAAmB;YACnB,wDAAU;SACX;mIAIU,SAAS,mBAjBlB,2DAAY;QACZ,qEAAc;QACd,8EAAiB;QACjB,mEAAa;QACb,2EAAe,aAGf,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,+DAAc;QACd,kEAAmB;QACnB,wDAAU;6FAKD,SAAS;cAnBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,8EAAiB;oBACjB,mEAAa;oBACb,2EAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,+DAAc;oBACd,kEAAmB;oBACnB,wDAAU;iBACX;gBACD,SAAS,EAAE,CAAC,0EAAc,EAAE,mEAAW,EAAC,0DAAO,CAAC;gBAChD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACrCD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,oEAAG;QAAA,sEAAW;QAAA,4DAAI;;6FDOL,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACC;AACiB;;;;;;;;;;AAS7D,MAAM,cAAc;IAMzB,YACU,WAAwB,EACxB,WAAwB,EACxB,MAAc,EACd,OAAgB;QAHhB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAS;QAR1B,SAAI,GAAe,IAAI,8DAAU,EAAE,CAAC;QAEpC,SAAI,GAAG,IAAI,CAAC;QAOR,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;IACvC,CAAC;IAEH,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBACzB,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,KAAK;iBACjB,CAAC;YACF,UAAU,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAC/B,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;iBACzB,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IACD,aAAa;QACX,qDAAqD;QACrD,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;aAC3C,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,UAAU,GAAC,IAAI,CAAC;gBAC7B,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;4EAvCU,cAAc;8FAAd,cAAc;QCX3B,yEACI;QAAA,yEACE;QAAA,yEAA+B;QAAA,mEAAQ;QAAA,4DAAM;QAE7C,0EACE;QAD4B,iKAA+B,mBAAe,IAAC;QAC3E,yEACE;QAAA,iFACI;QAAA,2EAKF;QAFS,sLAAwB;QAH/B,4DAKF;QAAA,4DAAiB;QAEnB,iFACI;QAAA,2EAME;QAHK,yLAA2B;QAHlC,4DAME;QAAA,+EACE;QADkB,iKAAsB;QACxC,wDACF;QAAA,4DAAW;QACf,4DAAiB;QAEjB,6EAEsC;QAAA,iEAAK;QAAA,4DAAS;QACpD,6EAA0D;QAAA,oEAAQ;QAAA,4DAAS;QAC/E,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;;QA7BI,0DAAuB;QAAvB,oFAAuB;QAMd,0DAAwB;QAAxB,mFAAwB;QAQxB,0DAA2B;QAA3B,sFAA2B;QAI9B,0DACF;QADE,sHACF;QAKI,0DAA6B;QAA7B,0FAA6B;;6FDjBpC,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAIN;AAID;AAID;AAGD;;AAgBzB,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAbd;YACL,0EAAgB;YAChB,wEAAe;YACf,sEAAc;YACd,oEAAa;SAChB;QAEG,0EAAgB;QAChB,wEAAe;QACf,sEAAc;QACd,oEAAa;mIAGR,cAAc,cAZnB,0EAAgB;QAChB,wEAAe;QACf,sEAAc;QACd,oEAAa,aAGb,0EAAgB;QAChB,wEAAe;QACf,sEAAc;QACd,oEAAa;6FAGR,cAAc;cAd1B,sDAAQ;eAAC;gBACN,OAAO,EAAE;oBACL,0EAAgB;oBAChB,wEAAe;oBACf,sEAAc;oBACd,oEAAa;iBAChB;gBACD,OAAO,EAAE;oBACL,0EAAgB;oBAChB,wEAAe;oBACf,sEAAc;oBACd,oEAAa;iBAChB;aACJ;;;;;;;;;;;;;;AC9BD;AAAA;AAAO,MAAM,UAAU;CAGtB;;;;;;;;;;;;;ACHD;AAAA;AAAO,MAAM,aAAa;CAIzB;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICK9C,4EAAqE;IAAA,mEAAQ;IAAA,4DAAS;;ADEnF,MAAM,eAAe;IAE1B,YAAY,OAAgB;QAC1B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,QAAQ;IACR,CAAC;;8EAPU,eAAe;+FAAf,eAAe;QCP5B,iFACE;QAAA,kFACE;QAAA,4EAAkC;QAAA,gEAAK;QAAA,4DAAS;QAEhD,qEAA4B;QAC5B,iHAAqE;QACrE,4EAAuC;QAAA,gEAAK;QAAA,4DAAS;QACvD,4DAAkB;QACpB,4DAAc;;QAHF,0DAA0B;QAA1B,wFAA0B;;6FDEzB,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACO;AACW;;;;;;;;;AAS7D,MAAM,iBAAiB;IAK5B,YACU,WAAwB,EACxB,WAAwB,EACxB,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAPxB,SAAI,GAAkB,IAAI,oEAAa,EAAE,CAAC;QAE1C,SAAI,GAAG,IAAI,CAAC;IAMN,CAAC;IAEP,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;oBACvB,yDAAU,CAAC,QAAQ;iBACpB,CAAC;YACF,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBACzB,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,KAAK;iBACjB,CAAC;YACF,UAAU,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAC/B,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;iBACzB,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,4EAA4E;QAC5E,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;aACvC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;kFAtCU,iBAAiB;iGAAjB,iBAAiB;QCX9B,yEACE;QAAA,yEACE;QAAA,yEAA+B;QAAA,mEAAQ;QAAA,4DAAM;QAE7C,0EACE;QAD+B,uKAAkC,sBAAkB,IAAC;QACpF,yEACE;QAAA,iFACE;QAAA,2EAKF;QAFS,wLAAuB;QAH9B,4DAKF;QAAA,4DAAiB;QAEjB,iFACI;QAAA,2EAKF;QAFS,yLAAwB;QAH/B,4DAKF;QAAA,4DAAiB;QAEnB,kFACI;QAAA,4EAME;QAHK,6LAA2B;QAHlC,4DAME;QAAA,+EACE;QADkB,oKAAsB;QACxC,wDACF;QAAA,4DAAW;QACf,4DAAiB;QAEjB,6EAEyC;QAAA,oEAAQ;QAAA,4DAAS;QAC1D,8EAAuD;QAAA,iEAAK;QAAA,4DAAS;QACzE,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;;QArCI,0DAA0B;QAA1B,uFAA0B;QAMnB,0DAAuB;QAAvB,kFAAuB;QAQrB,0DAAwB;QAAxB,mFAAwB;QAQxB,0DAA2B;QAA3B,sFAA2B;QAI9B,0DACF;QADE,sHACF;QAKI,0DAAgC;QAAhC,6FAAgC;;6FDzBrC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAA2C;AACmB;;;AAGvD,MAAM,cAAc;IAEzB,YAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAEnC,UAAU;QACR,MAAM,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC9B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,kBAAkB;QAElB,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,iBAAiB;QACf,MAAM,OAAO,GAAG,IAAI,4DAAc,EAAE,CAAC;QACrC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAEpC,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,GAAG,CAAC,GAAW;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,IAAI,CAAC,GAAW,EAAE,IAAS;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;IAC7D,CAAC;;4EAzBU,cAAc;iGAAd,cAAc,WAAd,cAAc;6FAAd,cAAc;cAD1B,wDAAU;;;;;;;;;;;;;;ACHX;AAAA;AAAA;AAAA;AAAA;AAA2C;AACZ;;;AASxB,MAAM,WAAW;IAEtB,YAAoB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;IAAI,CAAC;IAEhD,YAAY,CAAC,IAAmB;QAC9B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC;aAC/C,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IAC1B,CAAC;IAED,gBAAgB,CAAC,IAAgB;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC;aAC5C,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IAC1B,CAAC;;sEAZU,WAAW;8FAAX,WAAW,WAAX,WAAW;6FAAX,WAAW;cADvB,wDAAU;;;;;;;;;;;;;;ACTX;AAAA;AAAA;AAA2C;;AAGpC,MAAM,OAAO;IADpB;QAEE,eAAU,GAAY,KAAK,CAAC;KAE7B;;8DAHY,OAAO;0FAAP,OAAO,WAAP,OAAO;6FAAP,OAAO;cADnB,wDAAU;;;;;;;;;;;;;;ACFX;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: HomeComponent\n}, {\n  path: 'register',\n  component: RegisterComponent\n}, {\n  path: 'login',\n  component: LoginComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n\n<app-nav-bar></app-nav-bar>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { MaterialModule } from './material.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { AppHttpService } from './services/app-http.service';\r\nimport { AuthService } from './services/auth.service';\r\n\r\nimport { Globals } from './services/globals';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    NavBarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    HttpModule\r\n  ],\r\n  providers: [AppHttpService, AuthService,Globals],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoginModel } from '../models/login.model';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport {Globals} from '../services/globals'\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  user: LoginModel = new LoginModel();\r\n  loginForm: FormGroup;\r\n  hide = true;\r\nprivate loginstate:boolean;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private globals: Globals) { \r\n      this.loginstate = globals.loginstate;\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      'email': [this.user.email, [\r\n        Validators.required,\r\n        Validators.email\r\n      ]],\r\n      'password': [this.user.password, [\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(30)\r\n      ]]\r\n    });\r\n  }\r\n  onLoginSubmit() {\r\n    // alert(this.user.email + ' ' + this.user.password);\r\n    this.authService.authenticateUser(this.user)\r\n    .subscribe(data => {\r\n      if (data.success) { \r\n        this.globals.loginstate=true;\r\n        this.loginstate=true;\r\n        this.router.navigate(['/register']);\r\n      } else {\r\n        console.log('Failed');\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"medium-list\">\r\n    <div class=\"list-viewer-wrapper\">\r\n      <div class=\"list-header-title\">Register</div>\r\n  \r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginForm.valid && onLoginSubmit()\" novalidate>\r\n        <div class=\"form-container\">  \r\n          <mat-form-field>\r\n              <input id=\"email\"\r\n                     matInput\r\n                     formControlName=\"email\"\r\n                     [(ngModel)]=\"user.email\"\r\n                     placeholder=\"Enter your email\" />\r\n            </mat-form-field>\r\n  \r\n          <mat-form-field>\r\n              <input id=\"password\"\r\n                     matInput\r\n                     formControlName=\"password\"\r\n                     [(ngModel)]=\"user.password\"\r\n                     placeholder=\"Enter your password\"\r\n                     [type]=\"hide ? 'password':'text'\" />\r\n                <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                  {{hide ? 'visibility' : 'visibility_off'}}\r\n                </mat-icon>\r\n            </mat-form-field>\r\n  \r\n            <button mat-button type=\"submit\" \r\n                    class=\"mat-raised-button mat-primary\" \r\n                    [disabled]=\"!loginForm.valid\">Login</button>\r\n            <button mat-button routerLink=\"/register\" class=\"divider\">Register</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  ","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n    MatToolbarModule,\r\n} from '@angular/material/toolbar';\r\n\r\nimport {\r\n    MatButtonModule,\r\n} from '@angular/material/button';\r\n\r\nimport {\r\n    MatInputModule,\r\n} from '@angular/material/input';\r\nimport {\r\n    MatIconModule,\r\n} from '@angular/material/icon';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatInputModule,\r\n        MatIconModule\r\n    ],\r\n    exports: [\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatInputModule,\r\n        MatIconModule\r\n    ]\r\n})\r\nexport class MaterialModule { }\r\n","export class LoginModel {\n    email: String;\n    password: String;\n}\n","export class RegisterModel {\n    name: String;\n    email: String;\n    password: String;\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Globals} from '../services/globals'\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.scss']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n  globals: Globals;\r\n  constructor(globals: Globals) { \r\n    this.globals = globals;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <button mat-button routerLink=\"/\">Home </button>\r\n    \r\n    <span class=\"spacer\"></span>\r\n    <button *ngIf=\"globals.loginstate\" mat-button routerLink=\"/register\">Register</button>\r\n    <button mat-button routerLink=\"/login\">Login</button>\r\n  </mat-toolbar-row>\r\n</mat-toolbar> \r\n<!-- <P>var value : {{globals.loginstate}}</P> -->","import { Component, OnInit } from '@angular/core';\nimport { RegisterModel } from '../models/register.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  user: RegisterModel = new RegisterModel();\n  registerForm: FormGroup;\n  hide = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      'name': [this.user.name, [\n        Validators.required\n      ]],\n      'email': [this.user.email, [\n        Validators.required,\n        Validators.email\n      ]],\n      'password': [this.user.password, [\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(30)\n      ]]\n    });\n  }\n\n  onRegisterSubmit() {\n    // alert(this.user.name + ' ' + this.user.email + ' ' + this.user.password);\n    this.authService.registerUser(this.user)\n    .subscribe(data => {\n      if (data.success) {\n        this.router.navigate(['/login']);\n      } else {\n        console.log('Failed');\n      }\n    });\n  }\n\n}\n","<div class=\"medium-list\">\n  <div class=\"list-viewer-wrapper\">\n    <div class=\"list-header-title\">Register</div>\n\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"registerForm.valid && onRegisterSubmit()\" novalidate>\n      <div class=\"form-container\">\n        <mat-form-field>\n          <input id=\"name\"\n                 matInput\n                 formControlName=\"name\"\n                 [(ngModel)]=\"user.name\"\n                 placeholder=\"Enter your name\" />\n        </mat-form-field>\n\n        <mat-form-field>\n            <input id=\"email\"\n                   matInput\n                   formControlName=\"email\"\n                   [(ngModel)]=\"user.email\"\n                   placeholder=\"Enter your email\" />\n          </mat-form-field>\n\n        <mat-form-field>\n            <input id=\"password\"\n                   matInput\n                   formControlName=\"password\"\n                   [(ngModel)]=\"user.password\"\n                   placeholder=\"Enter your password\"\n                   [type]=\"hide ? 'password':'text'\" />\n              <mat-icon matSuffix (click)=\"hide = !hide\">\n                {{hide ? 'visibility' : 'visibility_off'}}\n              </mat-icon>\n          </mat-form-field>\n\n          <button mat-button type=\"submit\" \n                  class=\"mat-raised-button mat-primary\" \n                  [disabled]=\"!registerForm.valid\">Register</button>\n          <button mat-button routerLink=\"/login\" class=\"divider\">Login</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\n\n@Injectable()\nexport class AppHttpService {\n\n  constructor(private http: Http) { }\n\n  getHeaders() {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    // TODO: add token\n\n    return headers;\n  }\n\n  getRequestOptions(): RequestOptions {\n    const options = new RequestOptions();\n    options.headers = this.getHeaders();\n\n    return options;\n  }\n\n  get(url: string) {\n    return this.http.get(url, this.getRequestOptions());\n  }\n\n  post(url: string, data: any) {\n    return this.http.post(url, data, this.getRequestOptions());\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { HttpClient } from '@angular/common/http';\nimport { AppHttpService } from './app-http.service';\nimport { RegisterModel } from '../models/register.model';\nimport { LoginModel } from '../models/login.model';\n\n\n\n@Injectable()\nexport class AuthService {\n\n  constructor(private appHttp: AppHttpService) { }\n\n  registerUser(user: RegisterModel) {\n    return this.appHttp.post('users/register', user)\n    .map(res => res.json());\n  }\n\n  authenticateUser(user: LoginModel) {\n    return this.appHttp.post('users/login', user)\n    .map(res => res.json());\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class Globals {\r\n  loginstate: boolean = false;\r\n  \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}